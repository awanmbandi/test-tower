---
- name        : "{{ play_name }}"
  hosts       : "{{ hosts }}"
  gather_facts: "{{ gather_facts }}"
  become: yes
  vars_files:
    - ../variables/vars_security_group.yaml
  vars:
    ansible_python_interpreter: /usr/bin/python3
  
  tasks:
    - name: Set ansible_selinux to permissive
      set_fact:
        ansible_selinux: permissive
        
    - name:  Create WebApp and DB Security Group ID Config File
      file: 
        path: /root/webapp_db_security_group_ids.yaml
        state: touch
        owner: root
        group: root

    - name: Web/Appserver Security Group
      ec2_group:
        name:        "{{ webapp_server_sg_name}}"
        description: "{{ webapp_server_sg_description }}"
        vpc_id:      "{{ webapp_server_sg_vpc_id }}"
        region:      "{{ webapp_server_sg_region }}"  # Replace with your desired region
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ webapp_server_sg_rules_cidr_ip }}"  # Allow SSH from anywhere (open to the world)
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "{{ webapp_server_sg_rules_cidr_ip }}"  # Allow HTTP (port 80) from anywhere
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: "{{ webapp_server_sg_rules_cidr_ip }}"  # Allow HTTPS (port 443) from anywhere
        rules_egress:
          - proto: all
            cidr_ip: "{{ webapp_server_sg_rules_cidr_ip }}"  # Allow all outbound traffic (open to the world)
      register: webapsecuritygroup
    
    - name: Database Security Group
      ec2_group:
        name       : "{{ database_sg_name }}"
        description: "{{ database_sg_description }}"
        vpc_id     : "{{ database_server_sg_vpc_id }}"
        region     : "{{ database_sg_region }}"  # Replace with your desired region
        rules:
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: "{{ database_sg_rules_cidr_ip }}"  # Allow MySQL Access
      register: databasesecuritygroup
    
    # - name: Set Security Group IDs as Ansible Variables
    #   set_fact:
    #     database_securitygroup_id: "{{ databasesecuritygroup.group_id }}"
    #     appweb_securitygroup_id  : "{{ webapsecuritygroup.group_id }}"

    # Save The Web/Appserver and Database Security Group IDs in a YAML Config File

    - name: Write Security Group IDs to YAML File
      copy:
        content: |
          webapp_security_group_id: "{{ webapsecuritygroup.group_id }}"
          database_security_group_id: "{{ databasesecuritygroup.group_id }}"
        dest: /home/centos/webapp_db_security_group_ids.yaml


